[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
  endfunction

  let s:denite_win_width_percent = 0.85
  call denite#custom#option('default', {
      \ 'split': 'floating',
      \ 'winwidth': float2nr(&columns * s:denite_win_width_percent),
      \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width_percent)) / 2),
      \ })
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'Shougo/deol.nvim'

[[plugins]]
repo = 'kana/vim-repeat'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'nanotech/jellybeans.vim'
hook_add = '''
  set t_Co=256
  syntax on
  colorscheme jellybeans
'''

[[plugins]]
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = '''
  call gina#custom#command#alias('status', 'st')
  call gina#custom#command#option('st','-s')
  call gina#custom#command#option('st','--opener','split')
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
'''

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'vim-syntastic/syntastic'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'lilydjwg/colorizer'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
  let g:loaded_matchparen = 1
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'skywind3000/asyncrun.vim'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
  set hidden
  let g:LanguageClient_serverCommands = {
        \ 'cpp' : ['clangd']
        \}

  nnoremap <Space>lh :call LanguageClient#textDocument_hover()<CR>
  nnoremap <Space>ld :call LanguageClient#textDocument_definition()<CR>
  nnoremap <Space>lr :call LanguageClient#textDocument_rename()<CR>
'''

[[plugins]]
repo = 'vim-scripts/smartchr'
hook_add = '''
  inoremap <expr> = smartchr#loop(' = ',' == ', '=', '==')
  inoremap <expr> , smartchr#loop(', ',',')
'''

[[plugins]]
repo = 'rhysd/git-messenger.vim'
