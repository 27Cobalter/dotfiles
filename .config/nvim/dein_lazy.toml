[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'insertCharPre'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#augo_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000
  let g:deoplete#max_list=1000
  imap <expr><tab> pumvisible() ? "\<C-n>":
            \ neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']


[[plugins]]
repo = 'zchee/deoplete-clang'
hook_source = '''
  let g:deoplete#sources#clang#libclang_path = '/usr/lib/libclang.so'
  let g:deoplete#sources#clang#clang_header = '/usr/lib/clang'
'''
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'osyo-manga/vim-monster'
hook_source = '''
  let g:monster#completion#rcodetools#backend = "async_rct_complete"
  let g:deoplete#omni_patterns = {}
  let g:deoplete#omni_patterns.ruby = ['[^. *\t]\.\w*','\h\w*::']
'''
on_ft = ['ruby']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'poppyschmo/deoplete-latex'
hook_source = '''
  let g:deoplete#sources#latex#include_web_math = 1
  let g:deoplate#sources#latex#include_misc = 1
'''
on_ft = ['plaintex']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/unite.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = '''
  call denite#custom#map('insert', '<C-a>', '<denite:move_caret_to_head>')
  call denite#custom#map('insert', '<C-j>', '<denite:do_action:default>')
'''
on_path = '.*'

[[plugins]]
repo = 'rafi/vim-denite-mpc'
on_source = ['denite.nvim']
depends = ['denite.nvim']

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
  let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
'''
on_path = '.*'

[[plugins]]
repo = 'mattn/unite-mpc'
on_source = ['unite.vim']
depends = ['unite.vim']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'sudar/vim-arduino-syntax'
on_ft = ['arduino']

[[plugins]]
repo = 'suan/vim-instant-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = ['<Plug>(openbrowser-smart-search)']

[[plugins]]
repo = 'vim-scripts/smartchr'
on_i = 1

[[plugins]]
repo = 'Townk/vim-autoclose'
on_path = '.*'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_path = '.*'

[[plugins]]
repo = 'tpope/vim-surround'
depends = ['vim-repeat']
on_path = '.*'

[[plugins]]
repo = 'tyru/caw.vim'
on_path = '.*'

[[plugins]]
repo = 'vim-scripts/taglist.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_path = '.*'

[[plugins]]
repo = 'johngrib/vim-game-code-break'
on_path = '.*'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'jsp']

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['css', 'html', 'jsp']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css', 'html', 'jsp']

[[plugins]]
repo = 'JulesWang/css.vim'
on_ft = ['css', 'html', 'jsp']

[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
on_ft = ['css', 'html', 'jsp']
depends = ['css.vim']

[[plugins]]
repo = 'ap/vim-css-color'
on_ft = ['css', 'html', 'jsp']

[[plugins]]
repo = 'pasela/unite-webcolorname'
on_ft = ['css', 'html', 'jsp']

[[plugins]]
repo = 'KeitaNakamura/highlighter.nvim'
hook_source = '''
  let g:highlighter#auto_update = 1
  let g:highlighter#project_root_signs = ['.git']
'''
on_path = '.*'

[[plugins]]
